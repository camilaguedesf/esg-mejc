import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import matplotlib.pyplot as plt
import seaborn as sns

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="ESG na MEJC/EBSERH",
    page_icon="üè•",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS personalizado
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(90deg, #1f4e79, #2e8b57);
        padding: 1rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background: #f8f9fa;
        padding: 1rem;
        border-radius: 8px;
        border-left: 4px solid #1f4e79;
        margin: 0.5rem 0;
    }
    .esg-pillar {
        padding: 1rem;
        border-radius: 8px;
        margin: 0.5rem;
        text-align: center;
        color: white;
    }
    .environmental { background: #2e8b57; }
    .social { background: #dc3545; }
    .governance { background: #ffc107; color: black; }
</style>
""", unsafe_allow_html=True)

# Dados do estudo
@st.cache_data
def load_data():
    # Dados temporais (2014-2023)
    anos = list(range(2014, 2024))
    
    dados_temporais = pd.DataFrame({
        'Ano': anos,
        'Funcionarios': [307, 350, 410, 480, 550, 620, 690, 740, 785, 785],
        'Custo_Pessoal_Milhoes': [40.5, 48.2, 58.5, 68.7, 78.9, 85.4, 92.1, 97.3, 100.8, 102.1],
        'Consumo_Agua_m3': [90000, 88000, 85000, 82000, 78000, 75000, 70000, 68000, 65000, 63000],
        'Consumo_Energia_kWh': [280, 275, 270, 265, 260, 255, 250, 245, 240, 237],
        'Absenteismo_Pct': [3.8, 4.2, 4.8, 5.5, 6.2, 7.1, 7.8, 8.2, 8.5, 8.6],
        'Atestados_Mental': [85, 95, 120, 150, 180, 220, 250, 280, 300, 308],
        'Pacientes_Dia': [46729, 48200, 49500, 50100, 51200, 51800, 52100, 52400, 52653, 52800],
        'Patrimonio_Liquido': [80, 90, 105, 120, 130, 140, 145, 148, 150, 152]
    })
    
    # Scores ESG
    scores_esg = {
        'Ambiental': 41.7,
        'Social': 31.2,
        'Governan√ßa': 75.0
    }
    
    # Correla√ß√µes
    correlacoes = {
        'Patrim√¥nio L√≠quido vs Absente√≠smo': -0.98,
        'Funcion√°rios vs Custos': 0.957,
        'Atestados Mental vs Afastamentos': 0.688,
        'Res√≠duos vs Custos': 0.642
    }
    
    return dados_temporais, scores_esg, correlacoes

# Carregar dados
dados_temporais, scores_esg, correlacoes = load_data()

# Sidebar
st.sidebar.title("üè• ESG na MEJC/EBSERH")
st.sidebar.markdown("---")

# Menu principal
pagina = st.sidebar.selectbox(
    "Navega√ß√£o",
    ["üìä Dashboard Principal", 
     "üìà Evolu√ß√£o Temporal", 
     "üîó An√°lise de Correla√ß√µes",
     "‚öñÔ∏è Framework ESG",
     "üéØ Scores e Maturidade",
     "üìù Conclus√µes"]
)

# Header principal
st.markdown("""
<div class="main-header">
    <h1>üè• Governan√ßa e Sustentabilidade em Hospitais Universit√°rios</h1>
    <h3>An√°lise ESG da Maternidade Escola Janu√°rio Cicco (MEJC/EBSERH)</h3>
    <p>Per√≠odo de An√°lise: 2014-2023 | Hospital Universit√°rio P√∫blico</p>
</div>
""", unsafe_allow_html=True)

# ===== DASHBOARD PRINCIPAL =====
if pagina == "üìä Dashboard Principal":
    st.header("üìä Indicadores-Chave do Estudo")
    
    # KPIs principais
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            "üè• Per√≠odo de An√°lise",
            "10 anos",
            "2014-2023"
        )
    
    with col2:
        st.metric(
            "üë• Crescimento de Pessoal",
            "155,7%",
            "307 ‚Üí 785 funcion√°rios"
        )
    
    with col3:
        st.metric(
            "üíß Redu√ß√£o Consumo √Ågua",
            "-29,7%",
            "Sustentabilidade"
        )
    
    with col4:
        st.metric(
            "‚ö° Redu√ß√£o Consumo Energia",
            "-15,2%",
            "Efici√™ncia"
        )
    
    # Gr√°fico de scores ESG
    st.subheader("üéØ Scores ESG por Pilar")
    
    fig_scores = go.Figure(data=[
        go.Bar(
            x=list(scores_esg.keys()),
            y=list(scores_esg.values()),
            marker_color=['#2e8b57', '#dc3545', '#ffc107'],
            text=[f"{v:.1f}" for v in scores_esg.values()],
            textposition='auto'
        )
    ])
    
    fig_scores.update_layout(
        title="Score ESG por Pilar (0-100 pontos)",
        yaxis_title="Pontua√ß√£o",
        xaxis_title="Pilares ESG",
        showlegend=False,
        height=400
    )
    
    st.plotly_chart(fig_scores, use_container_width=True)
    
    # Destaque do Score Total
    score_total = sum(scores_esg.values()) / 3
    st.markdown(f"""
    <div style="text-align: center; padding: 2rem; background: #e8f4fd; border-radius: 10px; margin: 1rem 0;">
        <h2>üèÜ Score ESG Total da MEJC</h2>
        <h1 style="color: #1f4e79; font-size: 3rem;">{score_total:.1f}/100</h1>
        <h3 style="color: #666;">N√≠vel 2: ESG Emergente</h3>
        <p>Necess√°rio avan√ßos principalmente nos pilares Ambiental e Social</p>
    </div>
    """, unsafe_allow_html=True)

# ===== EVOLU√á√ÉO TEMPORAL =====
elif pagina == "üìà Evolu√ß√£o Temporal":
    st.header("üìà Evolu√ß√£o dos Indicadores ESG (2014-2023)")
    
    # Seletor de indicadores
    indicador = st.selectbox(
        "Selecione o indicador para visualizar:",
        ["Funcion√°rios e Custos", "Consumo de Recursos", "Indicadores Sociais", "Todos"]
    )
    
    if indicador == "Funcion√°rios e Custos":
        fig = make_subplots(specs=[[{"secondary_y": True}]])
        
        fig.add_trace(
            go.Scatter(x=dados_temporais['Ano'], y=dados_temporais['Funcionarios'],
                      name="N¬∫ Funcion√°rios", line=dict(color='blue')),
            secondary_y=False,
        )
        
        fig.add_trace(
            go.Scatter(x=dados_temporais['Ano'], y=dados_temporais['Custo_Pessoal_Milhoes'],
                      name="Custo Pessoal (R$ mi)", line=dict(color='red')),
            secondary_y=True,
        )
        
        fig.update_layout(title="Evolu√ß√£o do Quadro de Pessoal e Custos")
        fig.update_xaxes(title_text="Ano")
        fig.update_yaxes(title_text="N¬∫ Funcion√°rios", secondary_y=False)
        fig.update_yaxes(title_text="Custo (R$ milh√µes)", secondary_y=True)
        
        st.plotly_chart(fig, use_container_width=True)
        
        # Insights
        st.info("""
        üìä **Crescimento Correlacionado (R¬≤ = 0,957)**
        - Funcion√°rios: 307 ‚Üí 785 (+155,7%)
        - Custos: R$ 40,5 ‚Üí R$ 100,8 mi (+148,5%)
        - Cada funcion√°rio adicional custa ~R$ 214.523/ano
        """)
    
    elif indicador == "Consumo de Recursos":
        fig = make_subplots(specs=[[{"secondary_y": True}]])
        
        fig.add_trace(
            go.Scatter(x=dados_temporais['Ano'], y=dados_temporais['Consumo_Agua_m3'],
                      name="Consumo √Ågua (m¬≥)", line=dict(color='lightblue')),
            secondary_y=False,
        )
        
        fig.add_trace(
            go.Scatter(x=dados_temporais['Ano'], y=dados_temporais['Consumo_Energia_kWh'],
                      name="Consumo Energia (kWh)", line=dict(color='orange')),
            secondary_y=True,
        )
        
        fig.update_layout(title="Evolu√ß√£o do Consumo de Recursos")
        fig.update_xaxes(title_text="Ano")
        fig.update_yaxes(title_text="√Ågua (m¬≥)", secondary_y=False)
        fig.update_yaxes(title_text="Energia (kWh)", secondary_y=True)
        
        st.plotly_chart(fig, use_container_width=True)
        
        st.success("""
        üå± **Efici√™ncia Ambiental Positiva**
        - √Ågua: 90.000 ‚Üí 63.000 m¬≥ (-29,7%)
        - Energia: 280 ‚Üí 237 kWh (-15,2%)
        - Tecnologias sustent√°veis implementadas
        """)
    
    elif indicador == "Indicadores Sociais":
        fig = make_subplots(specs=[[{"secondary_y": True}]])
        
        fig.add_trace(
            go.Scatter(x=dados_temporais['Ano'], y=dados_temporais['Absenteismo_Pct'],
                      name="Absente√≠smo (%)", line=dict(color='red')),
            secondary_y=False,
        )
        
        fig.add_trace(
            go.Scatter(x=dados_temporais['Ano'], y=dados_temporais['Atestados_Mental'],
                      name="Atestados Sa√∫de Mental", line=dict(color='purple')),
            secondary_y=True,
        )
        
        fig.update_layout(title="Evolu√ß√£o dos Indicadores Sociais")
        fig.update_xaxes(title_text="Ano")
        fig.update_yaxes(title_text="Absente√≠smo (%)", secondary_y=False)
        fig.update_yaxes(title_text="Atestados Sa√∫de Mental", secondary_y=True)
        
        st.plotly_chart(fig, use_container_width=True)
        
        st.warning("""
        ‚ö†Ô∏è **Desafios no Pilar Social**
        - Absente√≠smo: 3,8% ‚Üí 8,6% (+126,2%)
        - Atestados Mental: 85 ‚Üí 308 (+262,4%)
        - Necessidade urgente de programas de bem-estar
        """)

# ===== AN√ÅLISE DE CORRELA√á√ïES =====
elif pagina == "üîó An√°lise de Correla√ß√µes":
    st.header("üîó An√°lise de Correla√ß√µes Estat√≠sticas")
    
    # Visualiza√ß√£o das correla√ß√µes
    st.subheader("üìä Principais Correla√ß√µes Identificadas")
    
    correlacao_df = pd.DataFrame([
        {"Vari√°veis": "Patrim√¥nio L√≠quido vs Absente√≠smo", "Correla√ß√£o": -0.98, "Signific√¢ncia": "p < 0.001"},
        {"Vari√°veis": "Funcion√°rios vs Custos Pessoal", "Correla√ß√£o": 0.957, "Signific√¢ncia": "p < 0.001"},
        {"Vari√°veis": "Atestados Mental vs Dias Afastamento", "Correla√ß√£o": 0.688, "Signific√¢ncia": "p < 0.01"},
        {"Vari√°veis": "Res√≠duos vs Custos Tratamento", "Correla√ß√£o": 0.642, "Signific√¢ncia": "p < 0.05"}
    ])
    
    # Gr√°fico de correla√ß√µes
    fig = go.Figure(data=go.Bar(
        x=correlacao_df['Vari√°veis'],
        y=correlacao_df['Correla√ß√£o'],
        marker_color=['red' if x < 0 else 'green' for x in correlacao_df['Correla√ß√£o']],
        text=[f"{x:.3f}" for x in correlacao_df['Correla√ß√£o']],
        textposition='auto'
    ))
    
    fig.update_layout(
        title="Coeficientes de Correla√ß√£o por Vari√°vel",
        yaxis_title="Coeficiente de Correla√ß√£o",
        xaxis_title="Pares de Vari√°veis",
        height=500
    )
    
    st.plotly_chart(fig, use_container_width=True)
    
    # Scatter plot das correla√ß√µes principais
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("Patrim√¥nio L√≠quido vs Absente√≠smo")
        
        fig_scatter1 = px.scatter(
            dados_temporais, 
            x='Patrimonio_Liquido', 
            y='Absenteismo_Pct',
            trendline="ols",
            title="Correla√ß√£o: r = -0.98"
        )
        fig_scatter1.update_layout(
            xaxis_title="Patrim√¥nio L√≠quido (R$ milh√µes)",
            yaxis_title="Absente√≠smo (%)"
        )
        st.plotly_chart(fig_scatter1, use_container_width=True)
    
    with col2:
        st.subheader("Funcion√°rios vs Custos")
        
        fig_scatter2 = px.scatter(
            dados_temporais, 
            x='Funcionarios', 
            y='Custo_Pessoal_Milhoes',
            trendline="ols",
            title="R¬≤ = 0.957"
        )
        fig_scatter2.update_layout(
            xaxis_title="N¬∫ de Funcion√°rios",
            yaxis_title="Custo Pessoal (R$ milh√µes)"
        )
        st.plotly_chart(fig_scatter2, use_container_width=True)

# ===== FRAMEWORK ESG =====
elif pagina == "‚öñÔ∏è Framework ESG":
    st.header("‚öñÔ∏è Framework ESG para Hospitais Universit√°rios")
    
    # Descri√ß√£o dos pilares
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("""
        <div class="esg-pillar environmental">
            <h3>üå± Pilar Ambiental (E)</h3>
            <p><strong>Score: 41.7/100</strong></p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        **Dimens√µes:**
        - Efici√™ncia de recursos (√°gua/energia)
        - Gest√£o de res√≠duos
        - Sustentabilidade operacional
        - Pegada de carbono
        
        **For√ßas:**
        - Redu√ß√£o 29,7% consumo √°gua
        - Redu√ß√£o 15,2% consumo energia
        
        **Desafios:**
        - Custos de gest√£o de res√≠duos
        - Certifica√ß√µes ambientais
        """)
    
    with col2:
        st.markdown("""
        <div class="esg-pillar social">
            <h3>üë• Pilar Social (S)</h3>
            <p><strong>Score: 31.2/100</strong></p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        **Dimens√µes:**
        - Sa√∫de ocupacional
        - Capacita√ß√£o profissional
        - Equidade no atendimento
        - Responsabilidade comunit√°ria
        
        **Desafios Cr√≠ticos:**
        - Absente√≠smo +126,2%
        - Sa√∫de mental dos colaboradores
        - Sobrecarga de trabalho
        
        **Oportunidades:**
        - Programas de bem-estar
        - Capacita√ß√£o continuada
        """)
    
    with col3:
        st.markdown("""
        <div class="esg-pillar governance">
            <h3>‚öñÔ∏è Pilar Governan√ßa (G)</h3>
            <p><strong>Score: 75.0/100</strong></p>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        **Dimens√µes:**
        - Transpar√™ncia financeira
        - Presta√ß√£o de contas
        - Gest√£o de riscos
        - Conformidade regulat√≥ria
        
        **For√ßas:**
        - Correla√ß√£o PL-Absente√≠smo forte
        - Transpar√™ncia de dados
        - Compliance regulat√≥rio
        
        **Manuten√ß√£o:**
        - Continuar boas pr√°ticas
        - Monitoramento sistem√°tico
        """)
    
    # Intera√ß√µes entre pilares
    st.subheader("üîÑ Intera√ß√µes Din√¢micas Entre Pilares")
    
    interacoes = {
        "E-G (Ambiental-Governan√ßa)": {
            "status": "‚úÖ Sinergia Positiva",
            "descricao": "Efici√™ncia ambiental correlacionada com boa gest√£o financeira",
            "acao": "Manter investimentos em sustentabilidade"
        },
        "S-G (Social-Governan√ßa)": {
            "status": "‚ö†Ô∏è Sinergia Cr√≠tica", 
            "descricao": "Problemas sociais impactam negativamente a governan√ßa (r = -0.98)",
            "acao": "Programas urgentes de sa√∫de ocupacional"
        },
        "E-S (Ambiental-Social)": {
            "status": "‚ùå Desconex√£o",
            "descricao": "Melhorias ambientais n√£o refletem em bem-estar social",
            "acao": "Integrar pr√°ticas ambientais com engajamento social"
        }
    }
    
    for nome, info in interacoes.items():
        with st.expander(f"{nome}: {info['status']}"):
            st.write(f"**Situa√ß√£o:** {info['descricao']}")
            st.write(f"**Recomenda√ß√£o:** {info['acao']}")

# ===== SCORES E MATURIDADE =====
elif pagina == "üéØ Scores e Maturidade":
    st.header("üéØ Avalia√ß√£o de Maturidade ESG")
    
    # Classifica√ß√£o de maturidade
    st.subheader("üìä Classifica√ß√£o de Maturidade ESG-HU")
    
    niveis = pd.DataFrame({
        'N√≠vel': ['N√≠vel 1', 'N√≠vel 2', 'N√≠vel 3', 'N√≠vel 4'],
        'Classifica√ß√£o': ['ESG Inicial', 'ESG Emergente', 'ESG Intermedi√°rio', 'ESG Avan√ßado'],
        'Pontua√ß√£o': ['0-25', '26-50', '51-75', '76-100'],
        'Status': ['', '‚Üê MEJC est√° aqui', '', '']
    })
    
    st.dataframe(niveis, use_container_width=True)
    
    # Gr√°fico radar
    st.subheader("üéØ Radar de Performance ESG")
    
    fig_radar = go.Figure()
    
    fig_radar.add_trace(go.Scatterpolar(
        r=[scores_esg['Ambiental'], scores_esg['Social'], scores_esg['Governan√ßa']],
        theta=['Ambiental', 'Social', 'Governan√ßa'],
        fill='toself',
        name='MEJC Score'
    ))
    
    fig_radar.update_layout(
        polar=dict(
            radialaxis=dict(
                visible=True,
                range=[0, 100]
            )),
        showlegend=True,
        title="Radar ESG - Performance por Pilar"
    )
    
    st.plotly_chart(fig_radar, use_container_width=True)
    
    # Plano de a√ß√£o
    st.subheader("üìã Plano de A√ß√£o por Pilar")
    
    tab1, tab2, tab3 = st.tabs(["üå± Ambiental", "üë• Social", "‚öñÔ∏è Governan√ßa"])
    
    with tab1:
        st.markdown("""
        **Score Atual: 41.7/100 - Intermedi√°rio**
        
        **A√ß√µes para Melhorias:**
        - ‚úÖ Continuar programas de efici√™ncia energ√©tica
        - ‚úÖ Ampliar sistemas de capta√ß√£o de √°gua de chuva
        - üîÑ Implementar gest√£o de res√≠duos mais eficiente
        - üÜï Buscar certifica√ß√µes ambientais (ISO 14001)
        - üÜï Desenvolver programa de pegada de carbono
        
        **Meta:** Atingir 60+ pontos em 2 anos
        """)
    
    with tab2:
        st.markdown("""
        **Score Atual: 31.2/100 - CR√çTICO**
        
        **A√ß√µes Urgentes:**
        - üö® Programa emergencial de sa√∫de mental
        - üö® Redu√ß√£o do absente√≠smo (meta: <5%)
        - üÜï Centro de bem-estar dos colaboradores
        - üÜï Flexibiliza√ß√£o de hor√°rios
        - üÜï Programas de qualidade de vida
        - üÜï Pesquisa de satisfa√ß√£o trimestral
        
        **Meta:** Atingir 50+ pontos em 1 ano
        """)
    
    with tab3:
        st.markdown("""
        **Score Atual: 75.0/100 - BOM**
        
        **A√ß√µes de Manuten√ß√£o e Melhoria:**
        - ‚úÖ Manter transpar√™ncia financeira
        - ‚úÖ Continuar monitoramento sistem√°tico
        - üîÑ Ampliar relat√≥rios de sustentabilidade
        - üÜï Implementar gest√£o de riscos ESG
        - üÜï Dashboard de indicadores em tempo real
        
        **Meta:** Atingir 85+ pontos mantendo excel√™ncia
        """)

# ===== CONCLUS√ïES =====
elif pagina == "üìù Conclus√µes":
    st.header("üìù Principais Conclus√µes do Estudo")
    
    # Principais achados
    st.subheader("üîç Principais Achados")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.success("""
        **‚úÖ PONTOS FORTES**
        
        üå± **Sustentabilidade Ambiental**
        - Redu√ß√£o significativa no consumo de recursos
        - Efici√™ncia energ√©tica crescente
        - Impacto ambiental positivo
        
        ‚öñÔ∏è **Governan√ßa S√≥lida**
        - Transpar√™ncia financeira adequada
        - Correla√ß√µes previs√≠veis (R¬≤ > 0.95)
        - Compliance regulat√≥rio eficaz
        """)
    
    with col2:
        st.error("""
        **‚ö†Ô∏è DESAFIOS CR√çTICOS**
        
        üë• **Pilar Social Cr√≠tico**
        - Absente√≠smo crescente (+126,2%)
        - Problemas de sa√∫de mental
        - Sobrecarga dos colaboradores
        
        üîó **Desconex√£o E-S**
        - Melhorias ambientais n√£o refletem no social
        - Necessidade de programas integrados
        """)
    
    # Contribui√ß√µes do estudo
    st.subheader("üéØ Contribui√ß√µes do Estudo")
    
    st.info("""
    **üìö CONTRIBUI√á√ïES CIENT√çFICAS**
    
    1. **Metodol√≥gica:** Primeiro estudo longitudinal ESG em hospital universit√°rio EBSERH
    2. **Te√≥rica:** Framework conceitual espec√≠fico para hospitais p√∫blicos
    3. **Emp√≠rica:** Base de dados robusta para estudos futuros
    4. **Pr√°tica:** Orienta√ß√µes para gestores da rede EBSERH
    """)
    
    # Recomenda√ß√µes
    st.subheader("üí° Recomenda√ß√µes Estrat√©gicas")
    
    recomendacoes = {
        "Curto Prazo (1 ano)": [
            "üö® Programa emergencial de sa√∫de mental",
            "üìä Sistema de monitoramento ESG integrado", 
            "üë• Contrata√ß√£o focada em bem-estar",
            "üîÑ Revis√£o de processos de trabalho"
        ],
        "M√©dio Prazo (2-3 anos)": [
            "üèÜ Certifica√ß√µes ambientais (ISO 14001)",
            "üìà Expans√£o do modelo para outros hospitais EBSERH",
            "üéØ Centro de excel√™ncia em sustentabilidade",
            "üìä Benchmarking sistem√°tico na rede"
        ],
        "Longo Prazo (5 anos)": [
            "üåü Lideran√ßa nacional em ESG hospitalar",
            "üåç Exporta√ß√£o do modelo para outras redes",
            "üî¨ Pesquisa avan√ßada em inova√ß√µes sustent√°veis",
            "üìà Impacto mensur√°vel nos ODS"
        ]
    }
    
    for prazo, acoes in recomendacoes.items():
        with st.expander(f"‚è∞ {prazo}"):
            for acao in acoes:
                st.write(f"- {acao}")
    
    # Modelo replic√°vel
    st.subheader("üîÑ Aplicabilidade na Rede EBSERH")
    
    st.markdown("""
    **üè• CRIT√âRIOS DE APLICABILIDADE**
    
    O modelo ESG-HU √© aplic√°vel a hospitais universit√°rios com:
    - üìè Porte m√©dio (100-200 leitos)
    - üìÖ Incorporados √† EBSERH ap√≥s 2013
    - üíæ Dados hist√≥ricos m√≠nimos (5 anos)
    - üñ•Ô∏è Sistemas de informa√ß√£o estruturados
    
    **üéØ POTENCIAL DE IMPACTO**
    - 45 hospitais universit√°rios na rede EBSERH
    - Base para pol√≠ticas p√∫blicas de sustentabilidade
    - Contribui√ß√£o para ODS 3, 12 e 13
    - Refer√™ncia para outras redes hospitalares p√∫blicas
    """)

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666; padding: 1rem;">
    <p>üìä <strong>Estudo ESG na MEJC/EBSERH</strong> | 
    üè• Maternidade Escola Janu√°rio Cicco | 
    üìÖ Per√≠odo: 2014-2023 | 
    üî¨ Pesquisa Acad√™mica</p>
    <p><em>Framework ESG para Hospitais Universit√°rios P√∫blicos</em></p>
</div>
""", unsafe_allow_html=True)